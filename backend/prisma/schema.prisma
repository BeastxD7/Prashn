// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        String    @id @default(uuid())
  firstName String
  lastName  String
  username  String    @unique
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  credits   Int       @default(5)
  quizzes   Quiz[]
}

model Quiz {
  id          Int        @id @default(autoincrement())
  title       String
  description String?
  createdAt   DateTime   @default(now())
  user        User       @relation(fields: [userId], references: [id])
  userId      String
  questions   Question[]
}

model Question {
  id          Int       @id @default(autoincrement())
  quiz        Quiz      @relation(fields: [quizId], references: [id])
  quizId      Int

  type        QuestionType

  content     String    // Question text

  options     Json?     // Store MCQ options, matching pairs, sequence items, etc.
  answer      String      // Correct answer(s) as JSON for flexibility

  explanation String?   // Explanation for the answer (optional)

  difficulty  Difficulty @default(MEDIUM)

  createdAt   DateTime  @default(now())
}

enum QuestionType {
  MCQ
  SHORT_ANSWER
  TRUE_FALSE
  FILL_IN_THE_BLANK
  MATCHING
  ESSAY
  ORDERING
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}
